//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchedulingClients.DemoApp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SchedulingClients.DemoApp.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # FOO BADGERS.
        /// </summary>
        internal static string JobStateClientControlsWindowDescription {
            get {
                return ResourceManager.GetString("JobStateClientControlsWindowDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Scheduling Clients Demo App
        ///
        ///Demonstrates the functionality available in the SchedulingClients and SchedulingClients.Controls assemblies..
        /// </summary>
        internal static string MainWindowDescription {
            get {
                return ResourceManager.GetString("MainWindowDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Task State Client Controls
        ///
        ///A collection of controls used to display task state changes.
        ///
        ///## Components
        ///
        ///### TaskStateClientControl
        ///
        ///This listens to the ITaskStateClient TaskProgressUpdated event to update an observable collection of mailboxes every time TaskProgressData is received. Mailboxes are assigned to agents, and couple an agentId with the last received TaskProgressData. 
        ///
        ///When TaskProgressData is received, the relevant mailbox is updated. If no mailbox currently exists for that agent, a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TaskStateClientControlsWindowDescription {
            get {
                return ResourceManager.GetString("TaskStateClientControlsWindowDescription", resourceCulture);
            }
        }
    }
}
