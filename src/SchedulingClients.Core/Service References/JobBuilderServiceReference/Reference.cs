//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchedulingClients.Core.JobBuilderServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobDto", Namespace="http://schemas.datacontract.org/2004/07/Scheduling.Services.Jobs.Dtos")]
    [System.SerializableAttribute()]
    public partial class JobDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RootOrderedListTaskIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RootOrderedListTaskId {
            get {
                return this.RootOrderedListTaskIdField;
            }
            set {
                if ((this.RootOrderedListTaskIdField.Equals(value) != true)) {
                    this.RootOrderedListTaskIdField = value;
                    this.RaisePropertyChanged("RootOrderedListTaskId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobBuilderServiceReference.IJobBuilderService")]
    public interface IJobBuilderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAPISemVer", ReplyAction="http://tempuri.org/IService/GetAPISemVerResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto> GetAPISemVer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAPISemVer", ReplyAction="http://tempuri.org/IService/GetAPISemVerResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>> GetAPISemVerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/BeginEditingJob", ReplyAction="http://tempuri.org/IJobBuilderService/BeginEditingJobResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<bool> BeginEditingJob(int jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/BeginEditingJob", ReplyAction="http://tempuri.org/IJobBuilderService/BeginEditingJobResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>> BeginEditingJobAsync(int jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/BeginEditingTask", ReplyAction="http://tempuri.org/IJobBuilderService/BeginEditingTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<bool> BeginEditingTask(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/BeginEditingTask", ReplyAction="http://tempuri.org/IJobBuilderService/BeginEditingTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>> BeginEditingTaskAsync(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CommitJob", ReplyAction="http://tempuri.org/IJobBuilderService/CommitJobResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto CommitJob(int jobId, int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CommitJob", ReplyAction="http://tempuri.org/IJobBuilderService/CommitJobResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> CommitJobAsync(int jobId, int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateAwaitingTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateAwaitingTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateAwaitingTask(int parentTaskId, int nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateAwaitingTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateAwaitingTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateAwaitingTaskAsync(int parentTaskId, int nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateJob", ReplyAction="http://tempuri.org/IJobBuilderService/CreateJobResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto> CreateJob(GAAPICommon.Architecture.JobPriority jobPriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateJob", ReplyAction="http://tempuri.org/IJobBuilderService/CreateJobResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>> CreateJobAsync(GAAPICommon.Architecture.JobPriority jobPriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateGoToNodeTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateGoToNodeTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateGoToNodeTask(int parentTaskId, int nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateGoToNodeTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateGoToNodeTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateGoToNodeTaskAsync(int parentTaskId, int nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateOrderedListTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateOrderedListTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateOrderedListTask(int parentTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateOrderedListTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateOrderedListTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateOrderedListTaskAsync(int parentTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateAtomicMoveListTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateAtomicMoveListTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateAtomicMoveListTask(int parentTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateAtomicMoveListTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateAtomicMoveListTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateAtomicMoveListTaskAsync(int parentTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateServicingTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateServicingTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateServicingTask(int parentTaskId, int nodeId, GAAPICommon.Architecture.ServiceType serviceType, System.TimeSpan expectedDuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateServicingTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateServicingTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateServicingTaskAsync(int parentTaskId, int nodeId, GAAPICommon.Architecture.ServiceType serviceType, System.TimeSpan expectedDuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateChargeTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateChargeTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateChargeTask(int parentTaskId, int nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateChargeTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateChargeTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateChargeTaskAsync(int parentTaskId, int nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateAtomicMoveTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateAtomicMoveTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateAtomicMoveTask(int parentAtomicMoveListTaskId, int moveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateAtomicMoveTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateAtomicMoveTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateAtomicMoveTaskAsync(int parentAtomicMoveListTaskId, int moveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateSleepingTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateSleepingTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateSleepingTask(int parentTaskId, int nodeId, System.TimeSpan expectedDuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateSleepingTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateSleepingTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateSleepingTaskAsync(int parentTaskId, int nodeId, System.TimeSpan expectedDuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateUnorderedListTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateUnorderedListTaskResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateUnorderedListTask(int parentTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/CreateUnorderedListTask", ReplyAction="http://tempuri.org/IJobBuilderService/CreateUnorderedListTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateUnorderedListTaskAsync(int parentTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/FinishEditingJob", ReplyAction="http://tempuri.org/IJobBuilderService/FinishEditingJobResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto FinishEditingJob(int jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/FinishEditingJob", ReplyAction="http://tempuri.org/IJobBuilderService/FinishEditingJobResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> FinishEditingJobAsync(int jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/FinishEditingTask", ReplyAction="http://tempuri.org/IJobBuilderService/FinishEditingTaskResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto FinishEditingTask(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/FinishEditingTask", ReplyAction="http://tempuri.org/IJobBuilderService/FinishEditingTaskResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> FinishEditingTaskAsync(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueEnumDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueEnumDirectiveResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto IssueEnumDirective(int taskId, string alias, byte value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueEnumDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueEnumDirectiveResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueEnumDirectiveAsync(int taskId, string alias, byte value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueFloatDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueFloatDirectiveResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto IssueFloatDirective(int taskId, string alias, float value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueFloatDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueFloatDirectiveResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueFloatDirectiveAsync(int taskId, string alias, float value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueIPAddressDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueIPAddressDirectiveResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto IssueIPAddressDirective(int taskId, string alias, System.Net.IPAddress value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueIPAddressDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueIPAddressDirectiveResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueIPAddressDirectiveAsync(int taskId, string alias, System.Net.IPAddress value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueShortDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueShortDirectiveResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto IssueShortDirective(int taskId, string alias, short value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueShortDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueShortDirectiveResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueShortDirectiveAsync(int taskId, string alias, short value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueUShortDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueUShortDirectiveResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto IssueUShortDirective(int taskId, string alias, ushort value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobBuilderService/IssueUShortDirective", ReplyAction="http://tempuri.org/IJobBuilderService/IssueUShortDirectiveResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueUShortDirectiveAsync(int taskId, string alias, ushort value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobBuilderServiceChannel : SchedulingClients.Core.JobBuilderServiceReference.IJobBuilderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobBuilderServiceClient : System.ServiceModel.ClientBase<SchedulingClients.Core.JobBuilderServiceReference.IJobBuilderService>, SchedulingClients.Core.JobBuilderServiceReference.IJobBuilderService {
        
        public JobBuilderServiceClient() {
        }
        
        public JobBuilderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobBuilderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobBuilderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobBuilderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto> GetAPISemVer() {
            return base.Channel.GetAPISemVer();
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>> GetAPISemVerAsync() {
            return base.Channel.GetAPISemVerAsync();
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<bool> BeginEditingJob(int jobId) {
            return base.Channel.BeginEditingJob(jobId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>> BeginEditingJobAsync(int jobId) {
            return base.Channel.BeginEditingJobAsync(jobId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<bool> BeginEditingTask(int taskId) {
            return base.Channel.BeginEditingTask(taskId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<bool>> BeginEditingTaskAsync(int taskId) {
            return base.Channel.BeginEditingTaskAsync(taskId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto CommitJob(int jobId, int agentId) {
            return base.Channel.CommitJob(jobId, agentId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> CommitJobAsync(int jobId, int agentId) {
            return base.Channel.CommitJobAsync(jobId, agentId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateAwaitingTask(int parentTaskId, int nodeId) {
            return base.Channel.CreateAwaitingTask(parentTaskId, nodeId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateAwaitingTaskAsync(int parentTaskId, int nodeId) {
            return base.Channel.CreateAwaitingTaskAsync(parentTaskId, nodeId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto> CreateJob(GAAPICommon.Architecture.JobPriority jobPriority) {
            return base.Channel.CreateJob(jobPriority);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<SchedulingClients.Core.JobBuilderServiceReference.JobDto>> CreateJobAsync(GAAPICommon.Architecture.JobPriority jobPriority) {
            return base.Channel.CreateJobAsync(jobPriority);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateGoToNodeTask(int parentTaskId, int nodeId) {
            return base.Channel.CreateGoToNodeTask(parentTaskId, nodeId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateGoToNodeTaskAsync(int parentTaskId, int nodeId) {
            return base.Channel.CreateGoToNodeTaskAsync(parentTaskId, nodeId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateOrderedListTask(int parentTaskId) {
            return base.Channel.CreateOrderedListTask(parentTaskId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateOrderedListTaskAsync(int parentTaskId) {
            return base.Channel.CreateOrderedListTaskAsync(parentTaskId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateAtomicMoveListTask(int parentTaskId) {
            return base.Channel.CreateAtomicMoveListTask(parentTaskId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateAtomicMoveListTaskAsync(int parentTaskId) {
            return base.Channel.CreateAtomicMoveListTaskAsync(parentTaskId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateServicingTask(int parentTaskId, int nodeId, GAAPICommon.Architecture.ServiceType serviceType, System.TimeSpan expectedDuration) {
            return base.Channel.CreateServicingTask(parentTaskId, nodeId, serviceType, expectedDuration);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateServicingTaskAsync(int parentTaskId, int nodeId, GAAPICommon.Architecture.ServiceType serviceType, System.TimeSpan expectedDuration) {
            return base.Channel.CreateServicingTaskAsync(parentTaskId, nodeId, serviceType, expectedDuration);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateChargeTask(int parentTaskId, int nodeId) {
            return base.Channel.CreateChargeTask(parentTaskId, nodeId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateChargeTaskAsync(int parentTaskId, int nodeId) {
            return base.Channel.CreateChargeTaskAsync(parentTaskId, nodeId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateAtomicMoveTask(int parentAtomicMoveListTaskId, int moveId) {
            return base.Channel.CreateAtomicMoveTask(parentAtomicMoveListTaskId, moveId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateAtomicMoveTaskAsync(int parentAtomicMoveListTaskId, int moveId) {
            return base.Channel.CreateAtomicMoveTaskAsync(parentAtomicMoveListTaskId, moveId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateSleepingTask(int parentTaskId, int nodeId, System.TimeSpan expectedDuration) {
            return base.Channel.CreateSleepingTask(parentTaskId, nodeId, expectedDuration);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateSleepingTaskAsync(int parentTaskId, int nodeId, System.TimeSpan expectedDuration) {
            return base.Channel.CreateSleepingTaskAsync(parentTaskId, nodeId, expectedDuration);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<int> CreateUnorderedListTask(int parentTaskId) {
            return base.Channel.CreateUnorderedListTask(parentTaskId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<int>> CreateUnorderedListTaskAsync(int parentTaskId) {
            return base.Channel.CreateUnorderedListTaskAsync(parentTaskId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto FinishEditingJob(int jobId) {
            return base.Channel.FinishEditingJob(jobId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> FinishEditingJobAsync(int jobId) {
            return base.Channel.FinishEditingJobAsync(jobId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto FinishEditingTask(int taskId) {
            return base.Channel.FinishEditingTask(taskId);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> FinishEditingTaskAsync(int taskId) {
            return base.Channel.FinishEditingTaskAsync(taskId);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto IssueEnumDirective(int taskId, string alias, byte value) {
            return base.Channel.IssueEnumDirective(taskId, alias, value);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueEnumDirectiveAsync(int taskId, string alias, byte value) {
            return base.Channel.IssueEnumDirectiveAsync(taskId, alias, value);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto IssueFloatDirective(int taskId, string alias, float value) {
            return base.Channel.IssueFloatDirective(taskId, alias, value);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueFloatDirectiveAsync(int taskId, string alias, float value) {
            return base.Channel.IssueFloatDirectiveAsync(taskId, alias, value);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto IssueIPAddressDirective(int taskId, string alias, System.Net.IPAddress value) {
            return base.Channel.IssueIPAddressDirective(taskId, alias, value);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueIPAddressDirectiveAsync(int taskId, string alias, System.Net.IPAddress value) {
            return base.Channel.IssueIPAddressDirectiveAsync(taskId, alias, value);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto IssueShortDirective(int taskId, string alias, short value) {
            return base.Channel.IssueShortDirective(taskId, alias, value);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueShortDirectiveAsync(int taskId, string alias, short value) {
            return base.Channel.IssueShortDirectiveAsync(taskId, alias, value);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto IssueUShortDirective(int taskId, string alias, ushort value) {
            return base.Channel.IssueUShortDirective(taskId, alias, value);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> IssueUShortDirectiveAsync(int taskId, string alias, ushort value) {
            return base.Channel.IssueUShortDirectiveAsync(taskId, alias, value);
        }
    }
}
